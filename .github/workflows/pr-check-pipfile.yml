name: pr-check-pipfile

# PipfileかPipfile-lock-*に差分があるPRに反応して起動する
on:
  pull_request:
    paths:
      - "Pipfile*"

env:
  WORKON_HOME: /tmp/.venv

jobs:
  # PipfileかPipfile-lock-*に差分があれば、Pipfileからlockファイルを作り出す
  pr-check-pipfile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.7]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.1.2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: pipenv lock
        run: pipenv lock
      - name: pipfile mv
        run: mv Pipfile.lock Pipfile.lock-${{ matrix.python-version }}
      # 差分があったときは差分を出力する
      - name: Show diff
        id: diff
        run: |
          result=`git diff`
          echo "::set-output name=result::$result"
      # 差分があったときは、コミットを作りpushする
      - name: Push
        if: github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != ''
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          git config user.name "hatohakaraage"
          git config user.email "hatohakaraage@example.com"
          git add -u
          git commit -m "鳩は唐揚げ！(自動で直してあげたよ！)"
          git push -f https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:refs/heads/pipfile-${PYTHON_VERSION//\./_}-${{github.event.pull_request.head.ref}}
      # pushしたブランチでPRを作る
      - name: Create PullRequest
        uses: actions/github-script@v3
        if: github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != ''
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pull_params = {
              head: "${{github.event.pull_request.head.repo.owner.login}}:pipfile-" + process.env.PYTHON_VERSION.replace('.', '_') + "-${{github.event.pull_request.head.ref}}",
              base: "${{github.event.pull_request.head.ref}}",
              ...common_params
            }
            const pulls_list_params = {
              state: "open",
              ...pull_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(list_res => {
              if (list_res.data.length === 0) {
                const pulls_create_params = {
                  title: "pipfileが更新されたので直してあげたよ！PRをマージしてね！ #${{github.event.pull_request.number}}",
                  body: "鳩の唐揚げおいしい！😋😋😋 #${{github.event.pull_request.number}}",
                  ...pull_params
                }
                console.log("call pulls.create:")
                console.log(pulls_create_params)
                github.pulls.create(pulls_create_params).then(create_res => {
                  const issues_add_assignees_params = {
                    issue_number: create_res.data.number,
                    assignees: ["${{github.event.pull_request.user.login}}"],
                    ...common_params
                  }
                  console.log("call issues.addAssignees:")
                  console.log(issues_add_assignees_params)
                  github.issues.addAssignees(issues_add_assignees_params)
                })
              }
            })
      # 既にPipfile修正のPRがある状態で、手動でPipfileを修正した場合、Pipfile修正のPRを閉じる
      - name: Close PullRequest
        uses: actions/github-script@v3
        if: github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result == ''
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const head_name = "pipfile-" + process.env.PYTHON_VERSION.replace('.', '_') + "-${{github.event.pull_request.head.ref}}"
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pulls_list_params = {
              head: "${{github.event.pull_request.head.repo.owner.login}}:" + head_name,
              base: "${{github.event.pull_request.head.ref}}",
              state: "open",
              ...common_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(res => {
              for(const data of res.data){
                const pulls_update_params = {
                  pull_number: data.number,
                  state: "closed",
                  ...common_params
                }
                console.log("call pulls.update:")
                console.log(pulls_update_params)
                github.pulls.update(pulls_update_params).then(res2 => {
                  const git_deleteRef_params = {
                    ref: "heads/" + head_name,
                    ...common_params
                  }
                  console.log("call git.deleteRef:")
                  console.log(git_deleteRef_params)
                  github.git.deleteRef(git_deleteRef_params)
                })
              }
            })
      - name: Exit
        if: steps.diff.outputs.result != ''
        run: exit 1
