name: pr-textlint

# pull_requestで何かあった時に起動する
on:
  pull_request:

jobs:
  # textlintをかけ、結果をPRにコメントとして表示する。
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
        with:
          # ここでsubmodule持ってくるとdetached headにcommitして死ぬ
          # submodule: 'recursive'
          fetch-depth: 0
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: yarn cache
        uses: actions/cache@v2.1.6
        with:
          key: ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          restore-keys: |
            ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-
      - name: Install dependencies
        run: |
          yarn install -D
      # lintする
      - name: Lint files
        id: lint
        run: |
          result="$(find . -type f -name "*.md" -not -path "./node_modules/*" -print0 | xargs -0 yarn textlint 2>&1)" || true
          echo "$result"
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo "::set-output name=result::$result"
          true
        continue-on-error: true
      # lint結果をコメントに残す
      - name: Lint Comment
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.lint.outputs.result != '' }}
        uses: actions/github-script@v4.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issues_listComments_params = {
              issue_number: context.issue.number,
              owner: context.repo.owner,
             repo: context.repo.repo
            }
            console.log("call issues.listComments:", issues_listComments_params)
            const issue_comments = (await github.issues.listComments(issues_listComments_params)).data.filter(
              issue_comment => issue_comment.user.id==41898282 && issue_comment.body.startsWith('日本語の')
            )

            for (const issue_comment of issue_comments) {
              const issues_deleteComment_params = {
                comment_id: issue_comment.id,
                owner: context.repo.owner,
                repo: context.repo.repo
              }
              console.log("call issues.deleteComment:", issues_deleteComment_params)
              await github.issues.deleteComment(issues_deleteComment_params)
            }

            const result = `${{steps.lint.outputs.result}}`
            const issues_createComment_params = {
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "日本語のLint結果だよ！🕊🕊🕊\n```\n"+result+"\n```"
            }
            console.log("call issues.createComment:", issues_createComment_params)
            await github.issues.createComment(issues_createComment_params)
      - name: Exit
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository && steps.lint.outcome == 'failure' }}
        run: exit 1

  # PRが来たらtextlintをかけてみて、差分があればPRを作って、エラーで落ちるjob
  format:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
        with:
          # ここでsubmodule持ってくるとdetached headにcommitして死ぬ
          # submodule: 'recursive'
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: yarn cache
        uses: actions/cache@v2.1.6
        with:
          key: ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          restore-keys: |
            ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-
      - name: Install dependencies
        run: |
          yarn install -D
      # textlintでformatする
      - name: Format files
        id: format
        run: |
          find . -type f -name "*.md" -not -path "./node_modules/*" -print0 | xargs -0 yarn textlint --fix
        continue-on-error: true
      # 差分があったときは差分を出力する
      - name: Show diff
        id: show_diff
        run: |
          echo "::set-output name=diff::$(git diff)"
      # 差分があったときは、コミットを作りpushする
      - name: Push
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ steps.show_diff.outputs.diff != '' }}
        run: |
          git config user.name "hatohakaraage"
          git config user.email "hatohakaraage@example.com"
          git add -u
          git commit -m "鳩は唐揚げ！(自動で直してあげたよ！)"
          git push -f https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git "HEAD:refs/heads/fix-text-${HEAD_REF}"
      # pushしたブランチでPRを作る
      - name: Create PullRequest
        uses: actions/github-script@v4.1
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ steps.show_diff.outputs.diff != '' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pull_params = {
              head: "dev-hato:fix-text-" + HEAD_REF,
              base: HEAD_REF,
              ...common_params
            }
            const pulls_list_params = {
              state: "open",
              ...pull_params
            }
            console.log("call pulls.list:", pulls_list_params)
            const pulls = (await github.pulls.list(pulls_list_params)).data

            if (0 < pulls.length) {
              return
            }

            const pulls_create_params = {
              title: "日本語が間違ってたので直してあげたよ！PRをマージしてね！ #${{github.event.pull_request.number}}",
              body: "鳩の唐揚げおいしい！😋😋😋 #${{github.event.pull_request.number}}",
              ...pull_params
            }
            console.log("call pulls.create:", pulls_create_params)
            const create_pull_res = (await github.pulls.create(pulls_create_params)).data

            if ("${{github.event.pull_request.user.login}}" === "dependabot[bot]") {
              return
            }

            const issues_add_assignees_params = {
              issue_number: create_pull_res.number,
              assignees: ["${{github.event.pull_request.user.login}}"],
              ...common_params
            }
            console.log("call issues.addAssignees:", issues_add_assignees_params)
            await github.issues.addAssignees(issues_add_assignees_params)
      # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
      - name: Close PullRequest
        uses: actions/github-script@v4.1
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ steps.show_diff.outputs.diff == '' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const head_name = "fix-text-" + HEAD_REF
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pulls_list_params = {
              head: "dev-hato:" + head_name,
              base: HEAD_REF,
              state: "open",
              ...common_params
            }
            console.log("call pulls.list:", pulls_list_params)
            const pulls = (await github.pulls.list(pulls_list_params)).data

            for (const data of pulls) {
              const pulls_update_params = {
                pull_number: data.number,
                state: "closed",
                ...common_params
              }
              console.log("call pulls.update:", pulls_update_params)
              await github.pulls.update(pulls_update_params)
              const git_deleteRef_params = {
                ref: "heads/" + head_name,
                ...common_params
              }
              console.log("call git.deleteRef:", git_deleteRef_params)
              await github.git.deleteRef(git_deleteRef_params)
            }
      - name: Exit
        if: ${{ steps.show_diff.outputs.diff != '' }}
        run: exit 1
