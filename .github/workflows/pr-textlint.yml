name: pr-textlint

# pull_requestで何かあった時に起動する
on:
  pull_request:

jobs:
  # textlintをかけ、結果をPRにコメントとして表示する。
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
        with:
          # ここでsubmodule持ってくるとdetached headにcommitして死ぬ
          # submodule: 'recursive'
          fetch-depth: 0
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: yarn cache
        uses: actions/cache@v2.1.4
        with:
          key: ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          restore-keys: |
            ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-
      - name: Install dependencies
        run: |
          yarn install -D
      # lintする
      - name: Lint files
        id: lint
        run: |
          result=$(yarn textlint $(find . -type f -name "*.md" -not -path "./node_modules/*") 2>&1) || true
          echo "$result"
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo "::set-output name=result::$result"
          true
        continue-on-error: true
      # lint結果をコメントに残す
      - name: Lint Comment
        if: github.event.pull_request.head.repo.full_name == github.repository && steps.lint.outputs.result != ''
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issues_listComments_params = {
              issue_number: context.issue.number,
              owner: context.repo.owner,
             repo: context.repo.repo
            }
            console.log("call issues.listComments:")
            console.log(issues_listComments_params)
            github.issues.listComments(issues_listComments_params).then(response =>
              response.data.filter(
                comment=>comment.user.id==41898282 && comment.body.startsWith('日本語の')
              ).map(
                comment=>comment.id
              ).forEach(
                comment_id => {
                  const issues_deleteComment_params = {
                    comment_id: comment_id,
                    owner: context.repo.owner,
                    repo: context.repo.repo
                  }
                  console.log("call issues.deleteComment:")
                  console.log(issues_deleteComment_params)
                  github.issues.deleteComment(issues_deleteComment_params)
                }
              )
            )

            const result = `${{steps.lint.outputs.result}}`
            const issues_createComment_params = {
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "日本語のLint結果だよ！🕊🕊🕊\n```\n"+result+"\n```"
            }
            console.log("call issues.createComment:")
            console.log(issues_createComment_params)
            github.issues.createComment(issues_createComment_params)
      - name: Exit
        if: github.event.pull_request.head.repo.full_name != github.repository && steps.lint.outcome == 'failure'
        run: exit 1

  # PRが来たらtextlintをかけてみて、差分があればPRを作って、エラーで落ちるjob
  format:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
        with:
          # ここでsubmodule持ってくるとdetached headにcommitして死ぬ
          # submodule: 'recursive'
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: yarn cache
        uses: actions/cache@v2.1.4
        with:
          key: ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          restore-keys: |
            ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ hashFiles('./.github/workflows/pr-textlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-
      - name: Install dependencies
        run: |
          yarn install -D
      # textlintでformatする
      - name: Format files
        id: format
        run: |
          yarn textlint --fix $(find . -type f -name "*.md" -not -path "./node_modules/*")
        continue-on-error: true
      - uses: dev-hato/actions-diff-pr-management@1
      
