name: pr-secretlint

# pull_requestで何かあった時に起動する
on:
  pull_request:

jobs:
  # secretlintをかけ、結果をPRにコメントとして表示する。
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
        with:
          # ここでsubmodule持ってくるとdetached headにcommitして死ぬ
          # submodule: 'recursive'
          fetch-depth: 0
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: yarn cache
        uses: actions/cache@v2.1.6
        with:
          key: ${{ hashFiles('./.github/workflows/pr-secretlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          restore-keys: |
            ${{ hashFiles('./.github/workflows/pr-secretlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ hashFiles('./.github/workflows/pr-secretlint.yml') }}-${{ runner.os }}-${{ matrix.node-version }}-yarn-
      - name: Install dependencies
        run: |
          yarn install -D
      # lintする
      - name: Lint files
        id: lint
        run: |
          result="$(find . -type f -not -path "./node_modules/*" -and -not -path "./.git/*" -print0 | xargs -0 yarn secretlint --maskSecrets 2>&1)" || true
          echo "$result"
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo "::set-output name=result::$result"
          true
        continue-on-error: true
      # lint結果をコメントに残す
      - name: Lint Comment
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.lint.outputs.result != '' }}
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issues_listComments_params = {
              issue_number: context.issue.number,
              owner: context.repo.owner,
             repo: context.repo.repo
            }
            console.log("call issues.listComments:", issues_listComments_params)
            const issue_comments = (await github.paginate(github.issues.listComments, issues_listComments_params)).filter(
              issue_comment => issue_comment.user.id==41898282 && issue_comment.body.startsWith('secretlintの')
            )

            for (const issue_comment of issue_comments) {
              const issues_deleteComment_params = {
                comment_id: issue_comment.id,
                owner: context.repo.owner,
                repo: context.repo.repo
              }
              console.log("call issues.deleteComment:", issues_deleteComment_params)
              await github.issues.deleteComment(issues_deleteComment_params)
            }

            const result = `${{steps.lint.outputs.result}}`
            const issues_createComment_params = {
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "secretlintのLint結果だよ！🕊🕊🕊\n```\n"+result+"\n```"
            }
            console.log("call issues.createComment:", issues_createComment_params)
            await github.issues.createComment(issues_createComment_params)
      - name: Exit
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository && steps.lint.outcome == 'failure' }}
        run: exit 1
