name: pr-test

# pull_requestで何かあった時に起動する
on:
  pull_request:

env:
  WORKON_HOME: /tmp/.venv

jobs:
  # PRが来たらformatをかけてみて、差分があればPRを作って、エラーで落ちるjob
  pr-format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
        with:
          # ここでsubmodule持ってくるとdetached headにcommitして死ぬ
          # submodule: 'recursive'
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}
      - name: pipenv cache
        uses: actions/cache@v2.1.6
        with:
          key: ${{ hashFiles('./.github/workflows/pr-test.yml') }}-${{ runner.os }}-${{ matrix.python-version }}-Dockerfile-${{ hashFiles('./Dockerfile') }}-pipenv
          path: ${{ env.WORKON_HOME }}
          restore-keys: |
            ${{ hashFiles('./.github/workflows/pr-test.yml') }}-${{ runner.os }}-${{ matrix.python-version }}-Dockerfile-${{ hashFiles('./Dockerfile') }}-pipenv
            ${{ hashFiles('./.github/workflows/pr-test.yml') }}-${{ runner.os }}-${{ matrix.python-version }}-Dockerfile-
      - name: Install pipenv
        run: |
          file_name=Dockerfile
          package_name=pipenv

          if [ -f ${file_name} ]
          then
            package_name_with_version=$(grep -oE "${package_name}[^ ]+" ${file_name})
          else
            package_name_with_version=${package_name}
          fi

          pip install ${package_name_with_version}
      - name: pipenv version
        run: pipenv --version
      - name: Install dependencies
        run: |
          pipenv install --dev
      # autopep8でformatする
      # --exit-codeをつけることで、autopep8内でエラーが起きれば1、差分があれば2のエラーステータスコードが返ってくる。正常時は0が返る
      - name: Format files
        id: format
        run: |
          pipenv run autopep8 --exit-code --in-place --recursive .
        continue-on-error: true
      # 差分があったときは差分を出力する
      - name: Show diff
        if: ${{ steps.format.outcome == 'failure' }}
        run: |
          git diff
      # 差分があったときは、コミットを作りpushする
      - name: Push
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.format.outcome == 'failure' }}
        run: |
          git config user.name "hatohakaraage"
          git config user.email "hatohakaraage@example.com"
          git add -u
          git commit -m "鳩は唐揚げ！(自動で直してあげたよ！)"
          git push -f https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:refs/heads/fix-format-${{github.event.pull_request.head.ref}}
      # pushしたブランチでPRを作る
      - name: Create PullRequest
        uses: actions/github-script@v4.0.2
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.format.outcome == 'failure' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pull_params = {
              head: "dev-hato:fix-format-${{github.event.pull_request.head.ref}}",
              base: "${{github.event.pull_request.head.ref}}",
              ...common_params
            }
            const pulls_list_params = {
              state: "open",
              ...pull_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(list_res => {
              if (list_res.data.length === 0) {
                const pulls_create_params = {
                  title: "formatが間違ってたので直してあげたよ！PRをマージしてね！ #${{github.event.pull_request.number}}",
                  body: "鳩の唐揚げおいしい！😋😋😋 #${{github.event.pull_request.number}}",
                  ...pull_params
                }
                console.log("call pulls.create:")
                console.log(pulls_create_params)
                github.pulls.create(pulls_create_params).then(create_res => {
                  if("${{github.event.pull_request.user.login}}" !== "dependabot[bot]") {
                    const issues_add_assignees_params = {
                      issue_number: create_res.data.number,
                      assignees: ["${{github.event.pull_request.user.login}}"],
                      ...common_params
                    }
                    console.log("call issues.addAssignees:")
                    console.log(issues_add_assignees_params)
                    github.issues.addAssignees(issues_add_assignees_params)
                  }
                })
              }
            })
      # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
      - name: Close PullRequest
        uses: actions/github-script@v4.0.2
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.format.outcome != 'failure' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const head_name = "fix-format-${{github.event.pull_request.head.ref}}"
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pulls_list_params = {
              head: "dev-hato:" + head_name,
              base: "${{github.event.pull_request.head.ref}}",
              state: "open",
              ...common_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(res => {
              for(const data of res.data){
                const pulls_update_params = {
                  pull_number: data.number,
                  state: "closed",
                  ...common_params
                }
                console.log("call pulls.update:")
                console.log(pulls_update_params)
                github.pulls.update(pulls_update_params).then(res2 => {
                  const git_deleteRef_params = {
                    ref: "heads/" + head_name,
                    ...common_params
                  }
                  console.log("call git.deleteRef:")
                  console.log(git_deleteRef_params)
                  github.git.deleteRef(git_deleteRef_params)
                })
              }
            })
      - name: Exit
        if: ${{ steps.format.outcome == 'failure' }}
        run: exit 1

  pr-super-lint:
    # Set the agent to run on
    runs-on: ubuntu-latest

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: github/super-linter@v4.6.0
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_JSCPD: false
          VALIDATE_PYTHON_ISORT: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
