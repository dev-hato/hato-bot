---
name: deploy

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  deploy_docker_image:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: setup
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set .env
        run: cp .env.example .env
        working-directory: .
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - run: echo "TAG_NAME=${HEAD_REF//\//-}" >> "$GITHUB_ENV"
        env:
          HEAD_REF: ${{github.head_ref}}
        if: ${{ github.event_name == 'pull_request' }}
      - run: echo 'TAG_NAME=latest' >> "$GITHUB_ENV"
        if: ${{ github.event_name == 'push' }}
      - name: Build docker image
        run: docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1
      - name: Start docker
        run: docker-compose up -d
      # Dockerコンテナ立ち上げから2分以内に疎通できるようになるかテストする
      - name: Test
        run: |
          cmd="curl -XPOST -d '{\"message\": \"help\"}'"
          cmd+=" -H \"Content-Type: application/json\""
          cmd+=" http://localhost:3000/healthcheck"
          cmd_="${cmd} -w '%{http_code}' -o /dev/null -s"
          start_unixtime=$(date +%s)

          while [ "$(echo "$(date +%s) - ${start_unixtime}" | bc)" -lt 120 ] \
                && (! (docker-compose ps | grep -q Exit))
          do
            if [ "$(eval "${cmd_}")" = 200 ] && eval "${cmd}"
            then
              docker-compose logs
              exit 0
            fi

            sleep 1
          done

          docker-compose logs
          exit 1
      - run: docker-compose push
