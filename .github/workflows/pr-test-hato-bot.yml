---
name: pr-test-hato-bot

# pull_requestで何かあった時に起動する
on:
  pull_request:

env:
  WORKON_HOME: /tmp/.venv

jobs:
  # unittestを行う
  # testが落ちたらチェックが落ちる
  pr-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9.10]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.3.2
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          KEY="${{ hashFiles('./.github/workflows/pr-test-hato-bot.yml') }}"
          KEY+="-${{ runner.os }}-${{ matrix.python-version }}-Dockerfile"
          KEY+="-${{ hashFiles('./Dockerfile') }}-pipenv-v2"
          echo "KEY=${KEY}" >> "${GITHUB_ENV}"
      - name: pipenv cache
        uses: actions/cache@v2.1.7
        with:
          key: ${{ env.KEY }}-${{ hashFiles('./Pipfile') }}
          path: ${{ env.WORKON_HOME }}
          restore-keys: |
            ${{ env.KEY }}-${{ hashFiles('./Pipfile') }}
            ${{ env.KEY }}-
      - name: Install pipenv
        run: |
          file_name=Dockerfile
          package_name=pipenv

          if [ -f ${file_name} ]
          then
            PATTERN="${package_name}[^ ]+"
            package_name_with_version=$(grep -oE "${PATTERN}" ${file_name})
          else
            package_name_with_version=${package_name}
          fi

          pip install ${package_name_with_version}
      - name: pipenv version
        run: pipenv --version
      - name: Install dependencies
        run: |
          pipenv install --dev
      - name: Set .env
        run: |
          cp .env.example .env
      - name: Test
        run: |
          pipenv run python -m unittest
